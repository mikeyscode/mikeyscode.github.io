<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <link>https://mikey.uk/</link>
    <description>Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 25 Jun 2020 14:30:16 +0100</lastBuildDate>
    
    <atom:link href="https://mikey.uk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why I Pay £38 a Month to be in a Facebook Group</title>
      <link>https://mikey.uk/posts/why-i-pay-38pound-a-month-to-be-in-a-facebook-group/</link>
      <pubDate>Thu, 25 Jun 2020 14:30:16 +0100</pubDate>
      
      <guid>https://mikey.uk/posts/why-i-pay-38pound-a-month-to-be-in-a-facebook-group/</guid>
      <description>&lt;p&gt;Some of you are probably already thinking I am crazy, or that I must like burning money and trust me I totally get that. On title alone I would think I was a little crazy myself, but I&#39;ll hold my hands up and be honest I have lied to you a tiny bit. Although the Facebook group is a huge part of it I do also get more than just that for my £38 a month such as;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;High quality training videos.&lt;/li&gt;
&lt;li&gt;Action Plans that come with every training video.&lt;/li&gt;
&lt;li&gt;Live Q&amp;amp;As with the creator of the plan.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are other general benefits but those are the main ones, and for those curious and do want to learn more you can visit the site and make up your own mind, I&#39;ll leave it below but for this post I&#39;m going to jump into why I decided to give it a go and how my first month has gone.&lt;/p&gt;
&lt;p&gt;The Program - &lt;a href=&#34;https://alexcostastyle.com/innercircle/&#34;&gt;https://alexcostastyle.com/innercircle/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;I live in the UK and my birthday was on the 24th of March, some of you will know lockdown started on the 23rd of March. Safe to say I didn&#39;t have the best birthday, and then the following two months I fell off the wagon completely with exercise and my diet - both of which at the time were the best they had ever been. My productivity levels crashed and I was spending far too much time feeling sorry for myself. There was one point where I had 10 take away boxes stacked up in my front room because I was being so lazy I didn&#39;t want to cook. Generally as someone who lives alone, lockdown hit me harder than I gave it credit, towards the end of May my personal trainer began doing outdoor sessions, and after one of those I felt re-energised and ready to go again. I wanted to take action and it so happened a YouTuber I followed was offering a program that sounded like it could really help me get out of the rut I was in and at the price of £1.25 a day, there wasn&#39;t much to lose by giving it a go.&lt;/p&gt;
&lt;p&gt;So that&#39;s what started me off, I am now a month in so lets see whats happened in that month.&lt;/p&gt;
&lt;h2 id=&#34;my-mindset-became-more-focused&#34;&gt;My Mindset became more Focused&lt;/h2&gt;
&lt;p&gt;While there is definitely still room for improvement I was categorically a person who would jump from task to task, project to project without seeing the previous one to the finish. It was common for me to start a new side project and then give up the second something more interesting took my eye. As part of the training videos mindset is actually covered and there were some valuable lessons there, which I have been applying for this month. Of course I could just be saying that, so here are two examples that I can share with you have literal evidence:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I started posting weekly YouTube videos on personal development, and have currently maintained that for four weeks since starting, and I am already working on the fifth video.&lt;br&gt;
Evidence: &lt;a href=&#34;https://www.youtube.com/channel/UCskrXHystox8adeKLx1Cidw&#34;&gt;https://www.youtube.com/channel/UCskrXHystox8adeKLx1Cidw&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I started running a minimum of 20km a week, part of the lessons made me realise that in every future image I had of myself I was in shape, so I decided to up my efforts and really commit to making that image a reality.&lt;br&gt;
Evidence: &lt;a href=&#34;https://www.strava.com/athletes/12785830&#34;&gt;https://www.strava.com/athletes/12785830&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;im-surrounded-by-motivated-people&#34;&gt;I&#39;m Surrounded by Motivated People&lt;/h2&gt;
&lt;p&gt;There is a good quote worth addressing here:
&lt;em&gt;“You are the average of the 5 people you spend the most time with”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I want to say this quote is originally by Jim Rohn but if I am wrong feel free to correct me. Essentially within the Facebook group there are a lot of us who are trying to improve and push for, ultimately, a better life. By being around people trying to do the same as you, especially with you encouraging each other, you really do feel a drive to do what you should be doing - not what you want to be doing. There&#39;s also a bit of healthy competition involved and more importantly a level of accountability. You don&#39;t want to be that person who falls behind or doesn&#39;t do what they say they were going to do so you really try hard and push yourself. That effort is worth its weight in gold because over long periods it&#39;s going to make the difference.&lt;/p&gt;
&lt;h2 id=&#34;my-comfort-zone-expanded&#34;&gt;My Comfort Zone Expanded&lt;/h2&gt;
&lt;p&gt;While I enjoyed public speaking, standing in front of a camera and putting that out for the world to see is something I was very hesitant about. From day one within the group I posted videos of myself discussing my goals, where I want to be and a lot more to complete the action steps. It felt a bit awkward at first but I received plenty of encouragement. It became more natural, and even fun. I&#39;m far from an amazing presenter but it&#39;s something I&#39;m working on which I wouldn&#39;t have before joining the group. You may have also noticed the photo of me posing on this site, that is the first time I have ever tried to pose for a photo because I always thought I would look daft, but I did it and I was actually pleasantly surprised with the result. The point I&#39;m making is that we grow a lot by venturing outside our comfort zones and this past month I have had the chance to do that a lot despite the fact I&#39;m stuck in my house for most days.&lt;/p&gt;
&lt;h2 id=&#34;my-happiness-increased&#34;&gt;My Happiness Increased&lt;/h2&gt;
&lt;p&gt;This is not something I can really put a tangible point on but I will say for the past month I have been much happier. I have been completing tasks I set myself and I can see the progress I&#39;m slowly starting to make towards my goals. That sense of achievement of what you have done is a great way to increase your happiness, and more than that it&#39;s a great way to keep focused and powering ahead with what you want to do. One of the key aspects I think that has been really important is that I have stopped searching for instant gratification and instead enjoying the grind and reward that becomes apparent along the way. When I start getting close to a goal or hit it, the feeling of achievement now is so much higher because I know I put in the hard work to get there. That increased sense of achievement when I look back on the past day, week or month has really made a difference, I&#39;m no longer thinking about all that time I wasted in front of Netflix, or just lounging around doing basically nothing productive - and when I do time some me time to relax, I can enjoy it much more because I know I earned it.&lt;/p&gt;
&lt;h2 id=&#34;would-i-recommend-it&#34;&gt;Would I Recommend it?&lt;/h2&gt;
&lt;p&gt;Well I haven&#39;t cancelled my subscription, and I&#39;m excited about what the following months are going to bring. So that&#39;d be a yes from me. What I will say is that my philosophy in life is that we all make our own choices, and those choices are the reason we are where we are. Sometimes we take the easy path and try to blame our current situation on other people, or the environment or some other scapegoat, but in every situation I have come across there has always been at least one success story, and if there&#39;s one there can be two. I&#39;ve chosen to invest in myself because I want to work harder and achieve more, if that&#39;s not the type of person you are, if you would rather take the easy path and relax then this probably is not for you. There&#39;s no magic solution out there to get you where you want to be, it just comes down to hard work and commitment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Best Investment I&#39;ve Made - Working with a Personal Trainer</title>
      <link>https://mikey.uk/posts/the-best-investment-ive-made/</link>
      <pubDate>Sun, 21 Jun 2020 09:07:08 +0100</pubDate>
      
      <guid>https://mikey.uk/posts/the-best-investment-ive-made/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://mikey.uk/images/dumbbells.jpg&#34; alt=&#34;Dumbbell Rack&#34; title=&#34;Dumbbell Rack&#34;&gt;&lt;/p&gt;
&lt;p&gt;I have made a lot of investments into myself - financial and otherwise, but if I could choose one of those investments as the one that made the biggest change to my lifestyle it would be an easy choice. I started working with my personal trainer Alex in April 2019, since then I have been working with him consistently to improve my health and fitness. So I thought I would share some of the key benefits I have seen during that time;&lt;/p&gt;
&lt;h2 id=&#34;a-friendly-face&#34;&gt;A Friendly Face&lt;/h2&gt;
&lt;p&gt;Having a friendly face in the gym can be a great help, especially if it is an unfamiliar place for you when you are getting started. There is a lot of equipment to get use to and I&#39;ll be honest - in the past I was one of those people who avoided the free weight area because it seemed a little intimidating. These days I&#39;m comfortable with all areas of the gym because of the exposure I got to them while working with Alex.&lt;/p&gt;
&lt;h2 id=&#34;accountability&#34;&gt;Accountability&lt;/h2&gt;
&lt;p&gt;Accountability is huge when you are attempting to maintain a habit. As someone who always attempted to go to the gym before working with Alex I could never remain consistent, I would be one of those terrible people that went to the gym in January, and gave up by March. I never managed to stick to it or get to where I wanted to be. A personal trainer helps massively with that, you are booked into time slots and sessions where you need to turn up (unless you want to throw money down the drain). This keeps you going, and as I&#39;m sure you know - consistency is key in almost anything you do to improving. It is more than just turning up though, it is &lt;em&gt;easy&lt;/em&gt; to tell if you have not been sticking to your diet, or having one too many drinks at the weekend and your personal trainer will probably give you nudges in the right direction if they catch you.&lt;/p&gt;
&lt;h2 id=&#34;knowledge&#34;&gt;Knowledge&lt;/h2&gt;
&lt;p&gt;While I went to the gym before working with Alex, my knowledge was based on the odd YouTube video and mostly making it up as I went along. Not only was not really getting me the results I was after it also came with a higher risk of injury - which is another great reason to work with a personal trainer, not only can they create specific plans to help you achieve the goals that you want, but they can ensure you are working towards those goals in a safe environment. As an example any lifts they can work with you to ensure correct form, and even throughout the workout they can ensure you are not pushing yourself too hard.&lt;/p&gt;
&lt;p&gt;Story time. In my first session with Alex, I was restricting my calories a lot more than I should have due to my lack of knowledge. Alex took me through an hour session, now I had not been to the gym in quite a while, and I almost passed out. The main reason I didn&#39;t is because Alex spotted I was wobbling and staring into space, so he stopped the session and got me some sugar. Thankfully crisis averted and I felt a lot better afterwards. Alex explained the probable cause and safe to say it hasn&#39;t happened since. So I know first hand how important the knowledge personal trainers have is to ensuring you&#39;re safe in the gym.&lt;/p&gt;
&lt;h2 id=&#34;efficient&#34;&gt;Efficient&lt;/h2&gt;
&lt;p&gt;When you are booked in for a session with your trainer, you are there to train. You won&#39;t be wasting time on your phone, you will be focused in on the exercises you&#39;re doing - which means you will be getting the most out of your time at the gym. Plus since your personal trainer will be tailoring each session to yourself you should get to see results much quicker than if you were going it alone.&lt;/p&gt;
&lt;h2 id=&#34;breaking-through-plateaus&#34;&gt;Breaking Through Plateaus&lt;/h2&gt;
&lt;p&gt;Plateau&#39;s can be hard to break through without a plan of action. Having a personal trainer is a great way to get past any barriers you&#39;re facing. Any plateau I have hit Alex has had a great solution for pushing through it. From progression exercises, utilising resistance bands or making use of time under tension. Regardless of what it is your personal trainer will be able to work with you to get you where you want to be.&lt;/p&gt;
&lt;h2 id=&#34;to-conclude&#34;&gt;To Conclude&lt;/h2&gt;
&lt;p&gt;Working with a personal trainer is one of the best decisions I&#39;ve made. The progress I have seen since I started has been outstanding and I can admit that I would never have got to where I am on my own. If you are in any way struggling with your fitness I would implore you to do some research in your area and try out a personal trainer for a month and see what the results are.&lt;/p&gt;
&lt;p&gt;I am going to leave my personal trainer&#39;s &lt;a href=&#34;https://www.instagram.com/metahumanfitness92/&#34;&gt;instagram page&lt;/a&gt;, I really recommend him if you are in the Manchester area.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Magic of Water</title>
      <link>https://mikey.uk/posts/the-magic-of-water/</link>
      <pubDate>Fri, 19 Jun 2020 08:21:08 +0100</pubDate>
      
      <guid>https://mikey.uk/posts/the-magic-of-water/</guid>
      <description>&lt;p&gt;I have honestly lost track of how many years it has been since I made the switch to only drinking water. The only time I break that rule is when alcohol is involved and I am out for drinks with friends. A lot of people profess the magic of water and how everyone should drink more so I wanted to give my experience on how it affected myself and also cover a few tips on how you could make the switch yourselves.&lt;/p&gt;
&lt;h2 id=&#34;water-helped-me-lose-weight&#34;&gt;Water Helped me Lose Weight&lt;/h2&gt;
&lt;p&gt;Now water is not a magic weight loss trick, but there are a few subtle benefits that you will see on your waist line if you make the switch. First of all be replacing those sugary drinks you are cutting out calories from your intake, as well as a huge amount of sugar. Not only that but often when you feel hungry it can also be thirst, it is very common for people to get these mixed up and eat when really a glass of water could suffice. Since food contains water it usually does the trick to resolve that thirst but what you have actually ended up doing is taking in more calories than required. A good tip is to make sure you are always drinking water as you go through your day, and when you sit down for a meal make sure you have a glass of water before eating. It sounds simple but it has always been a good trick for me to reduce my intake to just what I need.&lt;/p&gt;
&lt;h2 id=&#34;my-energy-is-not-dependent-on-caffeine&#34;&gt;My Energy is not Dependent on Caffeine&lt;/h2&gt;
&lt;p&gt;I was lucky in the fact I first tried tea when I was quite young and sugary food and drink was all I knew. I &lt;em&gt;hated&lt;/em&gt; the taste of tea and I assumed coffee was the same. Come forwards to the present day and I still have not tried coffee, nor do I ever plan to. I know far too many people who are dependent on coffee for getting them through the day and their energy levels but what I have found is generally my energy levels are consistently good with spikes and dips that you generally see from caffeine. I have competed in a few hackathons and water saw me through without issue in comparison to other attendants who had to top up on coffee or energy drinks consistently and looked like they were about to drop by the end of the 24 hour periods. I&#39;m also no Doctor but from what I have read water helps maintain the pH balance in our bodies, which in turn can boost our energy levels. So it seems like a win-win all round to me.&lt;/p&gt;
&lt;h2 id=&#34;hydration-helps-the-skin&#34;&gt;Hydration Helps the Skin&lt;/h2&gt;
&lt;p&gt;I struggled with my skin for a long time, but there was a noticeable improvement after I made the switch - although I will admit there was an even more noticeable improvement once I reduced my junk food intake, and started a proper skin care routine. Despite that there have been plenty links found between water intake and improved skin health so it is something to consider. I apparently look quite young for my age according to most people I know, while I can&#39;t say it&#39;s because of all the water I drink - who knows it may have played a part in it.&lt;/p&gt;
&lt;h2 id=&#34;water-is-free&#34;&gt;Water is Free&lt;/h2&gt;
&lt;p&gt;Before you start, yes - technically you pay for water but that&#39;s taking away from the point. If you are reading this post I can more than likely assume that water is probably fairly easily accessible for you. You can turn on your tap, and have a drink. You don&#39;t have to worry about running out or having to go to the shops to spend money to buy a 2L bottle. So in general you can save a fair bit of money over your life time by making the switch. I will say that if you do switch you will potentially get a hatred for cinemas when they charge you £4 for a 500ml bottle of water - so definitely take your own.&lt;/p&gt;
&lt;h2 id=&#34;water-is-a-migraine-and-headache-killer&#34;&gt;Water is a Migraine and Headache Killer&lt;/h2&gt;
&lt;p&gt;Have you ever been told to drink more water because you seem to get headaches or migraines a lot? Well the simple fact is dehydration can be a cause commonly, a hydrated body will out perform a dehydrated one and water is one of the best ways you can hydrate your body. I can tell you I have not had a headache since I made the switch (outside self-inflicted hangovers) and I have &lt;em&gt;never&lt;/em&gt; had a migraine. I attribute a lot of that down to the amount of water I drink. If you don&#39;t believe me here is a study done in the Netherlands on the &lt;a href=&#34;https://pubmed.ncbi.nlm.nih.gov/16128874/&#34;&gt;topic&lt;/a&gt;. So if you are a person that regularly suffers from either, maybe this is the solution for you.&lt;/p&gt;
&lt;h2 id=&#34;tips-for-switching&#34;&gt;Tips for Switching&lt;/h2&gt;
&lt;p&gt;So I said I would end this with some tips for switching and I will but first I want to make it clear. Tips are not magic, everything in your life is a choice. It ultimately is down to you if you make the switch or not, you can blame external factors all you want but all that does is act as a limiting belief for yourself.&lt;/p&gt;
&lt;p&gt;But without further ado some tips:&lt;/p&gt;
&lt;h3 id=&#34;stop-buying-other-drinks&#34;&gt;Stop Buying Other Drinks&lt;/h3&gt;
&lt;p&gt;If they are available in the house, then it becomes a lot easier not to drink them and get use to drinking water. Reducing the barriers to any new task or goal goes a huge way in making something stick.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Carry a Water Bottle&lt;/em&gt;&lt;br&gt;
This is another way to reduce the barriers to you. Carry a water bottle, the bigger the better and keep it with you throughout the day. Since it&#39;s the closest thing to you, when you are thirsty it will be the first thing you go for, so you can build up the habit of drinking water instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Do not have Flavoured Water&lt;/em&gt;&lt;br&gt;
This is a mistake a lot of people make. Flavoured water is filled with more sugar than you probably realise it is actually really bad for you. Also the sweetness is going to make it harder for you to make the switch. People often say water is bland, but what that usually means is that water is not filled with the sugar you are accustomed to. To me water tastes amazing and by comparison things with high sugar content do not. There is nothing better than coming back from a run to an ice cold glass of water, nothing is more refreshing. So if you make the switch drink water and reduce your sugar intake so you get a sense of taste back that isn&#39;t just for overly sweet food or drink.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Set a Daily Goal&lt;/em&gt;&lt;br&gt;
My final tip is to set a daily goal, you know you need around 2 liters of water per day. So set yourself the goal of consuming that much, you could set reminders on your phone, buy a drinks bottle that contains 2L or has marking on it to let you know how much you have had. Make yourself a nice tick list for the days of the week that you get to cross off at the end of each day, ticking items off a list is generally a very satisfying thing to do and it can definitely help you stay on track and keep motivated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;to-conclude&#34;&gt;To Conclude&lt;/h2&gt;
&lt;p&gt;Water is great, switching over to drinking it solely has been one of the best investments I have made into my health. You could spend all of today researching and reading medical documents on the benefits that water can give you - but my honest advice is to instead just try it for 30 days and see what the results are for you. People spend far too much time thinking about these types of things instead of taking action and doing them themselves and being their own judge. I hope this helps you finally decide to make the switch or at least try it, because it really is worth the effort.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mocking With Go Interfaces</title>
      <link>https://mikey.uk/posts/mocking-with-go-interfaces/</link>
      <pubDate>Fri, 13 Mar 2020 06:46:39 +0000</pubDate>
      
      <guid>https://mikey.uk/posts/mocking-with-go-interfaces/</guid>
      <description>&lt;p&gt;Go&#39;s implicit interfaces provide great flexibility when it comes to testing our applications. By satisfying the expected contract we can create mocks easily to be used within our test cases. For me there are two main approaches I personally take to mocking.&lt;/p&gt;
&lt;h2 id=&#34;lightweight-mocking&#34;&gt;Lightweight Mocking&lt;/h2&gt;
&lt;p&gt;I call this lightweight as it is less involved than the method we will come onto next. It basically involves just creating a new structure which satisfies the interface.&lt;/p&gt;
&lt;p&gt;Take the following interface where we create a &lt;code&gt;DepositWithdrawer&lt;/code&gt; which represents a person who is capable of depositing and withdrawing from an account.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DepositWithdrawer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Deposit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Withdraw&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we wanted to create a quick, lightweight mock we could do the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnAmount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnErr&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Deposit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnAmount&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnErr&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Withdraw&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnAmount&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnErr&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have a quick mock set up that we can determine the return conditions within and utilise in our tests, usage of the above would look something like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;accountHolder&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnAmount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ReturnErr&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;}
&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TransferFunds&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;accountHolder&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For a lot of use cases this lightweight approach to mocking your dependencies will work fine, however in some cases it may not provide enough flexibility for what you are after. For example you would have to create a different account holder for each test condition to alter what it would return, which is what brings us to our &amp;ldquo;more involved&amp;rdquo; approach which offers us a bit more flexibility.&lt;/p&gt;
&lt;h2 id=&#34;the-more-involved-approach-to-mocking&#34;&gt;The More Involved Approach to Mocking&lt;/h2&gt;
&lt;p&gt;I spent far to long wondering what to title this part. Despite being more involved I would definitely not call this &amp;ldquo;heavy weight&amp;rdquo; mocking since it is still fairly simple to set up. The power of this second approach comes from being able to utilise functional properties which will make more sense when you look at the example below&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;DepositFunc&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;WithdrawFunc&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;)
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Deposit&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;DepositFunc&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt;)
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Withdraw&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;WithdrawFunc&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt;) 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So with the above setup we can now define functions that satisfy the interface on the fly in our tests giving us more flexibility. So if we were going to write our test it might look something more like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt;{
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Test&lt;/span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;TransferAmount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;AccountHolder&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DepositWithdrawer&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ExpectedErr&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}{
  {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;Test&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ensure transfer amount cannot exceed withdrawal limit&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;TransferAmount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;AccountHolder&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;MockAccountHolder&lt;/span&gt;{
      &lt;span style=&#34;color:#a6e22e&#34;&gt;DepositFunc&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
      },
      &lt;span style=&#34;color:#a6e22e&#34;&gt;WithdrawFunc&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;) (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;error&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt; {
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;errors&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;New&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;amount is higher than available funds&amp;#34;&lt;/span&gt;)
        }

        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
      },
    }
  },
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;tc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tt&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TransferFunds&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tc&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TransferAmount&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;accountHolder&lt;/span&gt;)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tc&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ExpectedErr&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that is pretty much it. If we were to write out a bunch of tests the more involved approach brings us a higher degree in flexibility in controlling the return paths for our mock. I personally enjoy this second approach more and use it more times than I don&#39;t for testing but ultimately it all depends on your use case.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Behavioural Interfaces</title>
      <link>https://mikey.uk/posts/behavioural-interfaces/</link>
      <pubDate>Wed, 11 Mar 2020 06:41:29 +0000</pubDate>
      
      <guid>https://mikey.uk/posts/behavioural-interfaces/</guid>
      <description>&lt;p&gt;When it comes to designing abstractions interfaces are a fundamental tool in a developer&#39;s arsenal. Through my recent ventures into the Go languages I have begun to change my approach to how I use interfaces to a more behavioural approach, for example rather than having an interface to represent a &lt;em&gt;thing&lt;/em&gt; such as an animal or a user, I instead aim to represent the behaviours that those &lt;em&gt;things&lt;/em&gt; can do; walk, talk, login and so on.&lt;/p&gt;
&lt;p&gt;I said this approach has only become a recent change and that is because of that Go offers &lt;strong&gt;implicit&lt;/strong&gt; interfaces which are perfect for abstracting behaviours as it allows the use lots of slim interfaces with little effort on your part.&lt;/p&gt;
&lt;p&gt;Lets jump into an example, if we want to represent the behaviours of a human performer. We may say that they can &lt;em&gt;Speak&lt;/em&gt;, &lt;em&gt;Perform&lt;/em&gt; and &lt;em&gt;Walk&lt;/em&gt;. In the old style you might end up creating something like;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Speak&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Walk&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;distance&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But by modelling the interfaces based on a &lt;em&gt;thing&lt;/em&gt; such as a human we are creating unnecessary duplication and tightly linking our behaviours together. If we wanted to create an Animal performer next we would have to duplicate all of the above under a new &lt;code&gt;Animal&lt;/code&gt; interface. That&#39;s not very flexible so instead lets extract the behaviours to slim interfaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Speaker&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Speak&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Performer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;()
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Walker&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Walk&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;distance&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have three behavioural interfaces that have no direct link to a human, they could be satisfied by an animal, a fish or something completely different. This reduces duplication of code and gives us a more flexible layer of abstraction.&lt;/p&gt;
&lt;p&gt;Lets take a look at how that behavioural abstraction gives us more reusable code by considering the following function;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What kind of shoes do ninjas wear?&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sneakers!&amp;#34;&lt;/span&gt;)
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Backflip&lt;/span&gt;()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then at our point of use we may have&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StartAct&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Performer&lt;/span&gt;) {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;()
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;acts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;Performer&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt;{}, &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;{}}
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;act&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;acts&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;StartAct&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;act&lt;/span&gt;)
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From this we can see that because we focused on the behaviour we have more flexibility in how we can use our implementations. We don&#39;t have to create different stage acts for Humans, Dogs or anything else when in the end they are all just trying to perform.&lt;/p&gt;
&lt;p&gt;Now at the moment our acts are all just performing so there&#39;s little point in the wrapper function we have for it. What if we wanted to add a welcome message for each act? We want to focus on utilising slim interfaces, ideally with one method, so how do we pass through additional information without having to change our performer interface?&lt;/p&gt;
&lt;p&gt;This is where type assertions come in beautifully. Take the updated code below (trimmed for brevity)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ShowNamer&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;ShowName&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;() { &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; }

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;ShowName&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You&#39;ll notice we now have a new interface and the human implements it implicitly. So what does that give us the power to do you may be wondering, we are still only passing a &lt;code&gt;Performer&lt;/code&gt; to our &lt;code&gt;StageAct&lt;/code&gt;. Well thanks to type assertions we can see if our &lt;code&gt;Performer&lt;/code&gt; instance implements any other interfaces that might be useful to us.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StageAct&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Performer&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;.(&lt;span style=&#34;color:#a6e22e&#34;&gt;ShowNamer&lt;/span&gt;); &lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Welcome to the fabulous act of %s\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ShowName&lt;/span&gt;())
  }
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Perform&lt;/span&gt;()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So now we just have to update our main&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;acts&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#a6e22e&#34;&gt;Performer&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;Dog&lt;/span&gt;{}, &lt;span style=&#34;color:#a6e22e&#34;&gt;Human&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;Name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bob the Joker&amp;#34;&lt;/span&gt;}}
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;act&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;acts&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;StartAct&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;act&lt;/span&gt;)
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that&#39;s it, where our stage act has a show name set our type assertion will kick in and display the name of the performance otherwise we just skip it and let the act get on with their performance.&lt;/p&gt;
&lt;p&gt;It&#39;s simple and flexibility like this which is a huge draw to the Go langauge for me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mikey.uk/archives/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mikey.uk/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Five Tips to Wake Up Earlier</title>
      <link>https://mikey.uk/posts/five-tips-to-wake-up-earlier/</link>
      <pubDate>Tue, 09 Jul 2019 14:57:07 +0000</pubDate>
      
      <guid>https://mikey.uk/posts/five-tips-to-wake-up-earlier/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://mikey.uk/images/cat-sleeping-bed.jpg&#34; alt=&#34;Cat sleeping&#34; title=&#34;Cat sleeping&#34;&gt;&lt;/p&gt;
&lt;p&gt;Everyone has seen the videos about how every CEO wakes up at 5 am. It is sold as being the singular thing that will change your life. Not only will it will open the path to enlightenment, it will make you superhuman and not to mention you&#39;ll be a millionaire by year end. Regardless of what you have been sold, taking advantage of your morning can be invaluable. There are far fewer distractions to hinder your productivity and from personal experience it is just extremely peaceful when everyone else is sleeping. I have been sticking to early starts for a couple of months now so I thought I&#39;d share some advice on what has helped me stick to the habit.&lt;/p&gt;
&lt;h1 id=&#34;go-to-bed-earlier&#34;&gt;Go to Bed Earlier&lt;/h1&gt;
&lt;p&gt;You knew this was coming before you even clicked on this post. If you want to get up earlier then you need to commit to going to bed at a reasonable time. Even more than that, I don&#39;t mean getting in bed then watching your favourite shows for hours on end. When your head hits that pillow you should be focusing on one thing - sleeping. Personally, I work best on at least 7 hours sleep and I’d estimate most of you reading this are roughly the same. So work backwards from the time you want to get up (5:30 -&amp;gt; 10:30) and use that to decide when you should be &lt;em&gt;asleep&lt;/em&gt;. That means getting into bed a bit earlier than the time you land at so that you have time to drift off.&lt;/p&gt;
&lt;h1 id=&#34;have-a-night-time-routine&#34;&gt;Have a Night-time Routine&lt;/h1&gt;
&lt;p&gt;A great way to tell your body it is time to sleep is to have a strong routine to end your day with. The more you commit to the routine the more your body will accept that this is your pre-sleep ritual and it will begin to wind down naturally. My personal preference to wind down is to read it keeps me away from bright screens and puts me in the right mind set. Speaking of I&#39;m currently working through &lt;a href=&#34;https://www.amazon.co.uk/gp/product/1786891700/ref=as_li_tl?ie=UTF8&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=1786891700&amp;amp;linkCode=as2&amp;amp;tag=mikeycodes-21&amp;amp;linkId=67e4b55ddceb31e6fe54681fda9de0ae&#34;&gt;Drive&lt;/a&gt; by Daniel H. Pink. It&#39;s a good read if you&#39;re curious about what motivates us. Usually by the time I finish a chapter I&#39;m yawning and ready to hit the hay. So a quick trip to the bathroom to wash my face, brush my teeth, etc. and off I go. It&#39;s important to remember though that the key to a good routine is not copying someone else, instead you need to experiment and find what works for you.&lt;/p&gt;
&lt;h1 id=&#34;forget-about-that-alarm&#34;&gt;Forget about That Alarm&lt;/h1&gt;
&lt;p&gt;This tip might be a little unusual or even a little scary to some of you. Ditch your alarm, or at least replace it for a sunrise alarm like this &lt;a href=&#34;https://www.amazon.co.uk/gp/product/B07CVKP2CD/ref=as_li_tl?ie=UTF8&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=B07CVKP2CD&amp;amp;linkCode=as2&amp;amp;tag=mikeycodes-21&amp;amp;linkId=fc91cc7688f7444b3407c6d220b3bb8d&#34;&gt;one&lt;/a&gt;. It&#39;s a lot nicer to be slowly woken up by a gradually increasing light than some loud beeping. If you are worried about sleeping in, set your alarm for the latest possible moment you could wake up and still get to where you need to in time. From there if you are going to bed at the right time, you should start trying to wake up before your alarm. The more you do it, the more natural it becomes and soon you&#39;ll forget you even own an alarm. If you continue to struggle to wake up before your alarm then try to go to bed a little earlier each night, eventually you should find an arrangement that works for you. As with the theme of this post, experiment and tailor your experience to suit yourself.&lt;/p&gt;
&lt;h1 id=&#34;have-the-proper-resources&#34;&gt;Have the Proper Resources&lt;/h1&gt;
&lt;p&gt;You have probably heard this before but I&#39;m going to repeat it. We sleep for roughly a third of our lives. A third! If that isn&#39;t worth investing in then I don&#39;t know what is. Look at your sleeping arrangements and see where you can improve them; a new mattress? New sheets? Some memory foam? You&#39;ve got countless options these days so take the time out to improve something that you are going to spend a lot of time doing. For me pocket spring mattresses work best, and I avoid all types of memory foam - I don&#39;t know how people find them comfy. You&#39;re not me though so find what works for you, and if you&#39;re a little worried about price you can usually find some good discounts if you buy display models.&lt;/p&gt;
&lt;h1 id=&#34;have-a-reason-to-get-up&#34;&gt;Have a Reason to Get Up&lt;/h1&gt;
&lt;p&gt;This tip is almost as fundamental as going to bed earlier. Hopefully you have a reason to get up earlier, or a goal you can work towards. If not start there, and come up with something you can work towards in your mornings. Having a &amp;lsquo;want&amp;rsquo; is key to sticking with this habit. Once you have your &amp;lsquo;want&amp;rsquo; then spend some time planning out how you are going to use your mornings to tackle it. My current &amp;lsquo;want&amp;rsquo; is to learn how to do a handstand press-up. That means my mornings consist of a lot of balancing acts and being upside down against a wall. Having a goal where you can see the progression over time is an added motivator that will help keep you focused and motivated to stick to your routine.&lt;/p&gt;
&lt;h1 id=&#34;to-conclude&#34;&gt;To Conclude…&lt;/h1&gt;
&lt;p&gt;The important lesson to take from this post, if anything, is if you want to get up earlier you need to understand why you want to. Once you have your &amp;lsquo;want’ then you can start to arrange your sleeping pattern to get up earlier. It may take time but keep at it and be consistent. Hopefully when you look back at yourself in a couple months time you&#39;ll have reaped the rewards from your investment in yourself. One final note a lot of these ideas are what worked for me but everyone is different so take them and experiment to find what works for you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://mikey.uk/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mikey.uk/about/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://mikey.uk/images/me.jpg&#34; alt=&#34;mikey&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;justify-text&#34;&gt;
Mikey is a Software Developer based in Manchester, UK. He has a great passion for technology and anything pesonal development based. He currently spends his days split between working with the Go language developing distributed systems and reading every book under the sun about personal development. If you can&#39;t find him doing either of those then you can find him practising some form of calisthenics - more than likely falling on his head after attempting one too many handstands.
&lt;/div&gt;
&lt;h4 id=&#34;you-can-find-mikey-on-social-media-at&#34;&gt;You can find Mikey on social media at:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/mikeycodes&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCskrXHystox8adeKLx1Cidw&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Your IDE Is Not an Excuse for Unreadable Code</title>
      <link>https://mikey.uk/posts/your-ide-is-not-an-excuse-for-unreadable-code/</link>
      <pubDate>Fri, 16 Mar 2018 14:51:15 +0000</pubDate>
      
      <guid>https://mikey.uk/posts/your-ide-is-not-an-excuse-for-unreadable-code/</guid>
      <description>&lt;p&gt;I was reviewing some pull requests recently and I got into a  little debate. Just before I go into what that was exactly let me prefix this with: as a developer I am a very strong believer in writing clean, readable code. From top to bottom it should read like a story and if I handed it to someone who had never coded in their life, I want them to be able to understand roughly what the code is doing.&lt;/p&gt;
&lt;p&gt;So the debate started with the following comment;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“My IDE tells me what that parameter is meant to do when I hover over it”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some of you may agree with this point and some of you, like myself, will disagree with it. To me just because your IDE provides a utility does not mean you should rely on it. It should be there to aid your development, but it should not be a crutch that your code relies on to be readable.&lt;/p&gt;
&lt;p&gt;Lets dig into it with a quick example involving boolean flags, something which can often refer to code smell on their own (and for good reason!).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$postgresql-&amp;gt;truncateTable(&amp;#39;user&amp;#39;, true);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Could you tell purely by scanning over the above line what the flag was doing? I could hover over and check which inevitably I would be forced to do in this situation but that’s just extra cognitive load. Load which could easily be avoided with a few simple techniques. My personal take is to avoid boolean flags wherever possible, but if I really need to utilise them I’ll often create well named constants to replace passing through &lt;code&gt;true/false&lt;/code&gt; - for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$postgresql-&amp;gt;truncateTable(&amp;#39;user&amp;#39;, PostgreSQL::RESTART_SEQUENCE)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A parameter like the above allows me to scan through the code and understand at a glance what each part is doing without me having to hover over every other parameter or worse jump into a never-ending rabbit hole of methods. Alternatively (and preferably in my opinion) you could create separate methods to remove the boolean flags.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$postgresql-&amp;gt;truncateTable(&amp;#39;user&amp;#39;);
$postgresql-&amp;gt;restartSequence(&amp;#39;user&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Overall we have added an extra line but that trade off gives us more readable code that does not rely on an IDE to understand at first glance. Even better we don’t have to dodge, duck, dip, dive and dodge into every other method to check its parameters, or what the flags mean if our IDE does not support hovering hints. We simply read well named methods and carry on our merry way.&lt;/p&gt;
&lt;p&gt;Oh and lets not forget there are developers who choose not to use an IDE, or the times that you are in an environment where you do not have access to your favourite IDE. Maybe that urgent fix for that server that’s on fire at at 4:00am in the morning that you just had to SSH into.&lt;/p&gt;
&lt;p&gt;These days we have so many tools at our disposal that they can make us lazy and reliant. As Developers we should always strive to write the best code we possibly can, and avoid the shortcuts that can lead to technical debt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redis Pipelines</title>
      <link>https://mikey.uk/posts/redis-pipelines/</link>
      <pubDate>Tue, 23 Jan 2018 14:42:03 +0000</pubDate>
      
      <guid>https://mikey.uk/posts/redis-pipelines/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/en/thumb/6/6b/Redis_Logo.svg/1280px-Redis_Logo.svg.png&#34; alt=&#34;Redis logo&#34; title=&#34;Redis&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-are-pipelines&#34;&gt;What are Pipelines?&lt;/h2&gt;
&lt;p&gt;At the very basic level Redis Pipelines allow us to send multiple commands to our server, have them executed and then read all the replies. If you are wondering why that’s different to how it normally works, think of it this way:&lt;/p&gt;
&lt;p&gt;We have a bridge, on one side of the bridge is all the commands we want to run. Our helper memorises a single command, carries it across the bridge and executes it. He then comes back across the bridge and tells us the result of the command.&lt;/p&gt;
&lt;p&gt;Now that’s all well and good if we have a single or even a few commands, our helper is a pretty fast runner so we get the results from our commands pretty quick, but what if we have hundreds, thousands or even millions of commands?&lt;/p&gt;
&lt;p&gt;Well let&#39;s teach our helper about Pipelines. This time rather than memorising one command and crossing the bridge, he’s going to memorise them all first, then cross the bridge and execute them all together, one after the other. Then he’s going to return with a list of all the results when he’s done.&lt;/p&gt;
&lt;p&gt;In Redis terms every time we crossed the bridge we had to connect to Redis again. So you can imagine how much faster only crossing the bridge once is against hundred or even a thousand times.&lt;/p&gt;
&lt;p&gt;The keen eyed ones among you may have spotted something about Pipelines though, our helper is having to store in memory a lot of commands, as the amount of commands increases so does the load on our helper&#39;s brain. So what can we do to reduce that?&lt;/p&gt;
&lt;p&gt;Well depending on how good your helper is and how much he can store at once we can try and limit the amount of commands he has to remember through batching. Rather than sending all our requests in one go, we can send across 250 at a time. This’ll still be faster than our original method of one at a time, but limit the amount of memory our helper needs.&lt;/p&gt;
&lt;h2 id=&#34;so-how-do-you-implement-pipelines&#34;&gt;So how do you implement Pipelines?&lt;/h2&gt;
&lt;p&gt;Well it will vary depending on your implementation and language of choice but below I’ll demonstrate a simple example utilising &lt;a href=&#34;https://github.com/phpredis/phpredis&#34;&gt;phpredis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In our basic example we have a Book class which has a cache method. This method takes in an array of books that we loop through and store in redis as hashes. You will notice I haven’t implemented batching for this example, I&#39;ll leave that for you to figure out.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Book&lt;/span&gt;
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;REDIS_NAMESPACE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;library:books&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT_TTL&lt;/span&gt; 	  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14400&lt;/span&gt;;
	
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; $books)
    {
        $redis    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Redis&lt;/span&gt;();
        $pipeline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $redis&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;multi&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Redis&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PIPELINE&lt;/span&gt;);

        &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($books &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; $book) {
            $bookNamespace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s:%s&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;REDIS_NAMESPACE&lt;/span&gt;, $book&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;);
            $pipeline&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hMSet&lt;/span&gt;($bookNamespace, [
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; 		 &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $book&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $book&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;returnDate&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $book&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;returnDate&lt;/span&gt;
            ]);

            $pipeline&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;expire&lt;/span&gt;($bookNamespace, &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DEFAULT_TTL&lt;/span&gt;);
        }

        $pipeline&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exec&lt;/span&gt;();	
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So lets go over the key things we are doing here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$pipeline = $redis-&amp;gt;multi(Redis::PIPELINE);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First we start out by creating our Pipeline, in phpredis to do this we just call &lt;code&gt;-&amp;gt;multi()&lt;/code&gt; and pass through the pipeline constant. This will create a handle for us that we can execute our commands on.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$pipeline-&amp;gt;hMSet($bookNamespace, [
    &amp;#39;id&amp;#39;         =&amp;gt; $book-&amp;gt;id,
    &amp;#39;title&amp;#39;      =&amp;gt; $book-&amp;gt;title,
    &amp;#39;returnDate&amp;#39; =&amp;gt; $book-&amp;gt;returnDate
]);

$pipeline-&amp;gt;expire($bookNamespace, self::DEFAULT_TTL);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have our pipeline created we can throw commands at it, so that&#39;s exactly what we do. While looping through each of our books we add a &lt;code&gt;-&amp;gt;hMSet()&lt;/code&gt; and an &lt;code&gt;-&amp;gt;expire()&lt;/code&gt; command to our pipeline, this stores the commands and all the information they need to execute up until the next step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$pipeline-&amp;gt;exec();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now our pipeline has a bunch of commands that we want to execute, so all we have to do is call &lt;code&gt;exec()&lt;/code&gt; and it will start firing through the commands in a queue system (first in, first out).&lt;/p&gt;
&lt;p&gt;And that is all there is to it, we do not have any commands that will return any useful information so we do not need to do anything with the result from &lt;code&gt;exec()&lt;/code&gt;. If you were however retreiving rather than than setting, you would access your results like so: &lt;code&gt;$results = $pipeline-&amp;gt;exec();&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is just a basic introduction to Redis Pipelines, there is a lot more to them than I&#39;ve covered here so I highly encourage you read the redis.io topic to further your knowledge on them because they are a fundamental tool in day to day Redis operation: &lt;a href=&#34;https://redis.io/topics/pipelining&#34;&gt;https://redis.io/topics/pipelining&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>